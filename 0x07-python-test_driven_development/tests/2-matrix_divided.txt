2-matrix_divided
=================================

Using ``matrix_divided``

---------------------------------

First import the function:

	>>> matrix_divided  = __import__('2-matrix_divided').matrix_divided

    Empty list case:

    >>> matrix_divided([], 5)
    []

    TypeError cases:

    >>> matrix_divided([[1, 2, "string"], [1, 2, 3], [1, 2, 3]], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [1, 2, 3], [True, 2, 3]], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [1, 2, [3]], [1, 2, 3]], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([['a', 2, 3], [1, 2, 3], [1, 2, 3]], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [1, 2, 3], [2, 3]], 5)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    Division by zero:

    >>> matrix_divided([[1, 2, 3], [1, 2, 3], [2, 3]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
